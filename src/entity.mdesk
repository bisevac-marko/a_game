@Print
Render :: struct
{
@NoPrint
    sprite: SpriteID,
    color: Color,
    layer: f32,
}

@Print
Transform :: struct
{
    position: vec2,
    scale: vec2,
    rotation: vec2,
}

@Print
Rigidbody :: struct
{
    velocity: vec2,
    acceleration: vec2,
    
    mass: f32,
}


@Print
Particle :: struct
{
    position: vec2,
    velocity: vec2,
    acceleration: vec2,
    size: vec2,
}


ParticleEmitter :: struct
{
    min_vel: vec2,
    max_vel: vec2,
    
    drag: f32,
    
    color: Color,
    size: vec2,
    
    particle_spawn_rate: u32,
    
    position: vec2,
    
    particles: *Particle,
    particle_index: u32,
    max_particles :u32,
}

ENTITY_MAX :: 10000
NUM_COMPONENTS :: 4


ComponentInfo :: struct
{
    size: u32,
    name: *char,
}

Component :: struct
{
    data: *void,
}


System :: struct
{
    id: u32,
    entities: *Array,
    signature: u64,
    Update: SystemFunc,
    entity_id_to_array_id: HashMap,
    name: *char,
}
